# pip install development tools: "basedpyright", "ruff", "mypy", "debugpy"

# [tool.pyright]
# pythonVersion = "3.12"
# typeCheckingMode = "off" # off, basic, standard, strict
# ignore = ["*"] # use Ruff for linting, and mypy for type checking (set to empty list for type checking)
# disableLanguageServices = false
# disableOrganizeImports = true # use Ruff's import organizer
# diagnosticMode = "workspace" # openFilesOnly, workspace

# comment out [tool.pyright] section above if using basedpyright
[tool.basedpyright]
pythonVersion = "3.12"
reportImplicitStringConcatenation = false # conflicts with ruff formatter
typeCheckingMode = "off" # off, basic, standard, strict, all
ignore = [
  "*",
] # use Ruff for linting, and mypy for type checking (set to empty list for type checking)

# not yet detectable by basedpyright
# disableLanguageServices = false
# disableOrganizeImports = true
# diagnosticMode = "workspace"

[tool.ruff]
target-version = "py312"
line-length = 88
indent-width = 4
fix = false
exclude = [
  ".eggs",
  ".git",
  ".mypy_cache",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".venv",
  ".vscode/",
  ".vscode-oss/",
  "build",
  "dist",
  "venv",
  "Dropbox/",
  "projects/",
  "node_modules",
  "site-packages",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D407",
  "T201",
  "ERA",
  "ERA001",
  "E501",
  "D406",
  "RET504",
  "PLR2004",
  "PD901",
  "PLR0913",
]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = "dynamic"

[tool.mypy]
python_version = "3.12"
strict = true
ignore_missing_imports = true
follow_imports = "silent"
show_column_numbers = true
show_error_codes = false
show_error_context = false
color_output = false
error_summary = false
pretty = false
namespace_packages = true
plugins = []

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "--strict-markers -ra -q"
testpaths = ["tests"]
